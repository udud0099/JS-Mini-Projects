.filterOptionWrapper {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
  gap: 1rem;
  position: relative;
  margin: 2rem 0;
}

.searchInputWrapper {
  position: relative;
  height: 35px;

  .searchInput {
    outline: none;
    padding: 0.5rem 1rem;
    border-radius: 5px;
    border: 2px solid #ccc;
    width: 100%;
    padding-left: 1.8rem;
    height: 100%;
  }

  .searchIcon {
    position: absolute;
    top: 50%;
    left: 10px;
    transform: translateY(-50%);
    opacity: 0.7;
    transition: all 0.2s ease;
  }

  .searchInput:focus,
  .searchInput:hover {
    border-color: var(--text-link);
    & + .searchIcon {
      opacity: 1;
    }
  }
}

.filterByTechWrapper {
  grid-column-end: -1;
  display: flex;
  justify-content: flex-end;
  align-items: center;
  gap: 10px;

  & > a {
    display: inline-block;
    width: 35px;
    height: 35px;
    transition: 0.4s ease-in-out;
    overflow: hidden;
    border-radius: 4px;

    &:hover {
      box-shadow: 0 0 20px rgba(0, 0, 0, 0.34);
    }
  }

  & > a > img {
    padding: 2px;
    border-radius: 4px;

    &.activeTech {
      border: 2px solid var(--text-link);
    }
  }
}

.emptyMessage {
  margin: 5rem auto;
  font-size: 18px;
  font-weight: 500;

  > div {
    margin-top: 0.5rem;
    font-size: 14px;
    font-weight: 400;
  }
}

.challengeGrid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(min(350px, 100%), 1fr));
  grid-gap: 2.5rem;
  margin: 2rem 0;
}

.challengeCard {
  position: relative;
  padding: 1rem;
  border: 1px solid var(--card-border);
  border-radius: 0.5rem;
  box-shadow: 0 0 1rem 0 var(--card-shadow);
  transition: all 0.2s ease-in-out;
  background: var(--card-body);

  display: flex;
  flex-direction: column;
  gap: 1rem;

  &:hover {
    box-shadow: 0 6px 8px 0 var(--card-shadow-hover);
    transform: scale(1.05);
  }

  // for only new
  &.new {
    background:
      linear-gradient(var(--card-body), var(--card-body)) padding-box,
      rgba(88, 7, 250, 0.25) border-box;
    box-shadow: 0 0 1rem 0 #e2c7ff;
    border: 0.2rem solid transparent;
    border-image-slice: 1;

    &:hover {
      box-shadow: 0 6px 8px 0 #d7b2ff;
    }
  }

  .avatarContainer > *:not(:first-child) {
    margin-top: 0.5rem;
  }

  h3 {
    font-size: 1.25rem;
    font-weight: 500;
    color: var(--text-body);
    margin: 0px;
  }

  &.disabled h3 {
    color: grey;
  }

  &.disabled {
    cursor: not-allowed;
    box-shadow: 0 3px 4px 0 rgb(0 0 0 / 10%);
  }

  &.disabled:hover {
    transform: scale(1);
  }

  a {
    color: chocolate;
    text-decoration: none;
  }

  .developer {
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 0.8rem;
    color: var(--text-body);

    & > img {
      width: 25px;
      height: 25px;
      margin-right: 0.5rem;
      border-radius: 50%;
    }
  }

  .name {
    color: var(--text-body);
  }

  .difficultyBadge {
    padding: 0.1rem 0.6rem;
    display: flex;
    align-items: center;
    gap: 0.4rem;
    border: 2px solid;
    border-radius: 5rem;
    font-weight: bold;
    color: var(--difficulty-color);
  }

  .ellips {
    width: 0.4rem;
    height: 0.4rem;
    border: 1px solid;
    border-radius: 50%;
    background-color: var(--difficulty-color);
  }

  &.Easy {
    --difficulty-color: #10b981;
  }

  &.Medium {
    --difficulty-color: darkorange;
  }

  &.Hard {
    --difficulty-color: #ff375f;
  }
}

.checkboxContainer {
  width: fit-content;
  display: flex;
  align-items: center;
  column-gap: 0.3rem;
  .checkbox {
    width: 20px;
    height: 20px;
    cursor: pointer;
  }
  label {
    cursor: pointer;
  }
  cursor: pointer;
}

.newTag {
  padding: 0.25rem 1rem;
  color: #ffffff;
  font-size: small;
  font-weight: bold;
  position: absolute;
  top: -0.9rem;
  z-index: 1;
  left: 50%;
  transform: translate(-50%);
  border-radius: 10rem;
  background: rgb(96, 44, 253)
    linear-gradient(90deg, rgba(96, 44, 253, 1) 9%, rgba(123, 0, 255, 1) 55%);
}

.interviewBadge {
  padding: 0.2rem 0.75rem;
  color: #ffffff;
  border-radius: 5rem;
  background: linear-gradient(60deg, rgb(75, 114, 255) 0%, rgb(5, 38, 255) 83%);
}
